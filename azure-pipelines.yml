# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
# - develop/*
# - staging/* 

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '16.x'
        displayName: 'Install Node.js 16.x'

      - script: |
          cd heroes-frontend/
          npm install -g @angular/cli
          npm install
          ng build --prod
        displayName: 'npm install and build'
        workingDirectory: '$(Build.SourcesDirectory)'
      - task: CmdLine@2
        displayName: "Run unit tests"
        inputs:
          script: |
            cd heroes-frontend/
            ng test --browsers=ChromeHeadless --code-coverage --watch=false
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/heroes-frontend/'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          ArtifactName: 'drop'
          publishLocation: 'Container'
  - job: waitforValidation
    displayName: Wait for external validation
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: 4320 #job times out in 3 days
    steps: 
     - task: ManualValidation@0
       timeoutInMinutes: 1440 # task times out in 1 day
       inputs:
         notifyUsers:  |
            johnpaulnwaz@gmail.com
         instructions: 'Please validate the build configuration and resume'
         onTimeout: 'resume'   

- stage: Development
  displayName: 'Deploy to Development'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: VMDeploy
  displayname: web
    pool:
      vmImage: 'ubuntu-latest'
    environment: 
      name: Development
      resourceType: VirtualMachine
    strategy:
       rolling:
         maxParallel: 5 #for percentages
         preDeploy:
           steps:
           - download: current
             artifact: drop
           - script: echo initialize, cleanup, backup
         deploy:
           steps: 
           - task: bash@3
             displayname: deploying to vm
             inputs: 
               targetType: 'inline'
               script:  |  


          - task: AzureWebApp@1
            displayName: 'Deploy App Service'
            inputs:
              azureSubscription: 'Inform-your-subscription'
              appType: 'webAppLinux'
              appName: 'angularwithazure'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'NODE|16-lts'

- stage: Staging
  dependsOn: [ Development ]
  displayName: 'Deploy to Staging'
  jobs:
    - job:  DeployToStaging
      displayName: 'DeployStaging'
      steps:
      - script: echo Deploying to Staging
- stage: Production
  dependsOn: [ Staging ]
  displayName: 'Deploy to Production'
  jobs:
    - deployment: DeployProduction
      pool:
        vmImage: 'ubuntu-latest'
      environment: Production
      strategy:
        runOnce:
          deploy:
            steps:
            - script: echo Deploying to Production