### Deploys the build(artifacts) into the respective environments

stage: Development
  displayName: 'Deploy to Development'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: VMDeploy
  displayname: web
    pool:
      vmImage: 'ubuntu-latest'
    environment: 
      name: Development
      resourceType: VirtualMachine
    strategy:
       rolling:
         maxParallel: 5 #for percentages
         preDeploy:
           steps:
           - download: current
             artifact: drop
           - script: echo initialize, cleanup, backup
         deploy:
           steps: 
           - task: bash@3
             displayname: deploying to vm
             inputs: 
               targetType: 'inline'
               script:  |  

- stage: Staging
  dependsOn: [ Development ]
  displayName: 'Deploy to Staging'
  jobs:
    - job:  DeployToStaging
      displayName: 'DeployStaging'
      steps:
      - script: echo Deploying to Staging
- stage: Production
  dependsOn: [ Staging ]
  displayName: 'Deploy to Production'
  jobs:
    -job: waitforValidation
    displayName: Wait for external validation
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: 4320 #job times out in 3 days
    steps: 
     - task: ManualValidation@0
       timeoutInMinutes: 1440 # task times out in 1 day
       inputs:
         notifyUsers:  |
            johnpaulnwaz@gmail.com
         instructions: 'Please validate the build configuration and resume'
         onTimeout: 'resume'
    - job: DeployProduction
      pool:
        vmImage: 'ubuntu-latest'
      environment: Production
      strategy:
        runOnce:
          deploy:
            steps:
            - script: echo Deploying to Production